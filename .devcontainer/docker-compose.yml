version: '3'

services:
  dataset_builder:
    build:
      context: ./environment/ubuntu
      # CPU
      # dockerfile: Dockerfile
      # GPU
      dockerfile: Dockerfile.gpu
      args:
        # USER setting
        - USERNAME=${USER_NAME}
        - USER_UID=${USER_UID}
        - USER_GID=${USER_GID}
        # network setting
        - http_proxy=${HTTP_PROXY}
        - https_proxy=${HTTPS_PROXY}
    volumes:
      # Forwards the local Docker socket to the container.
      - /var/run/docker.sock:/var/run/docker-host.sock
      # Update this to wherever you want VS Code to mount the folder of your project
      - ..:/workspace:cached

    # Overrides default command so things don't shut down after the process ends.
    entrypoint: /usr/local/share/docker-init.sh
    command: sleep infinity
    environment:
      # poetry setting environments
      - POETRY_VIRTUALENVS_CREATE=false
      - POETRY_VIRTUALENVS_IN_PROJECT=true
      
      # Nvidia device enviroments
      # - NVIDIA_VISIBLE_DEVICES=all
      # - NVIDIA_DRIVER_CAPABILITIES=alls

      # Uncomment the next four lines if you will use a ptrace-based debuggers like C++, Go, and Rust.
      # cap_add:
      #  - SYS_PTRACE
      # security_opt:
      #   - seccomp:unconfined

    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [ gpu ] 
              
            # - driver: nvidia 
            #   capabilities: [ gpu ]

      # Uncomment the next line to use a non-root user for all processes.
    user: vscode
    working_dir: /workspace
    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally. 
    # (Adding the "ports" property to this file will not forward from a Codespace.)
